{"filter":false,"title":"quick_start.mos","tooltip":"/source/quick_start.mos","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":99,"column":0},"action":"remove","lines":["(!","    File Type: Xpress Mosel model file. Mosel is the FICO optimization modeling language.","               Mosel models implement optimization problems and application logic.","    Purpose: Shows how an Xpress Insight application should load input data for a scenario and execute the scenario.","    (c) 2020 Fair Isaac Corporation.","!)","model \"Quick Start\"","    version 1.0.0","","    options noimplicit","","    uses \"mminsight\"","","    (!@.","        @insight.execmodes.CUSTOM_RUN.","            @descr Custom execution mode.","            @clearinput false","","        @.              Unselect current category.","        @mc.flush       Define previous annotations as global.","    !)","","    ! The input data model for the scenario.","    !@insight.manage input","    public declarations","        !@insight.alias My Integer","        MyInteger: integer","","        !@insight.alias Array Indices","        Indices: range","","        !@insight.alias Input Array","        Input: array(Indices) of integer","    end-declarations","","    ! The result data model for the scenario.","    !@insight.manage result","    public declarations","        ! Insert declarations of entities that are calculated by the model.","        !@insight.alias Result Array","        Result: array(Indices) of real","    end-declarations","","    !@doc.descr Implementation of the LOAD execution mode. Loads input data.","    procedure loadmode","        ! Initialize the input entities from a data source.","        initializations from \"mmsheet.csv:skiph;input.csv\"","            Input as '[A:B]'","        end-initializations","","        MyInteger := Indices.size","    end-procedure","","    !@doc.descr Implementation of the RUN execution mode. Takes input data and uses it to compute the results.","    procedure runmode","        ! Calculate the results data.","        forall(i in Indices) Result(i) := Input(i) * MyInteger","    end-procedure","","    procedure custommode","        forall(i in Indices) Result(i) := Input(i) * MyInteger * 0.5","    end-procedure","","    ! Route execution mode to handler procedure.","    case insightgetmode of","        INSIGHT_MODE_LOAD: do","            ! Scenario is being 'loaded' through Xpress Insight.","            loadmode","            ! Input entities will be captured and stored in the scenario.","        end-do","","        INSIGHT_MODE_RUN: do","            ! Scenario is being 'run' through Xpress Insight.","            ! Populate with Insight scenario input data and continue model run.","            insightpopulate","            runmode","            ! Result entities will be captured and stored in the scenario.","        end-do","","        \"CUSTOM_RUN\": do","            insightpopulate","            custommode","        end-do","","        INSIGHT_MODE_NONE: do","            ! When the model is run in standalone Mosel (outside of Xpress Insight),","            ! first execute the load mode and then the run mode.","            setparam('insight_testmode', true)","            loadmode","            runmode","        end-do","    else","        writeln(\"Unknown execution mode\")","        exit(1)","    end-case","","    ! This code executes after the execution mode handler has finished successfully.","    writeln(\"\\nFinished.\")","end-model",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":168,"column":0},"action":"insert","lines":["model ModelName","uses \"mmxprs\"; !gain access to the Xpress-Optimizer solver","","!optional parameters section","declarations","","! DECLARATION OF PARAMETERS","","locations=1..30","","d_ij:array(locations,locations) of real \t!distance between location i and j","s_ij:array(locations,locations) of real\t\t!speed on the road between location i and j","a_ij:array(locations,locations) of real\t\t!availability of the road between location i and j","","","! DECLARATIONS OF VARIABLES","","X_ij:array(locations) of mpvar\t\t!1, if truck moves directly from location i to location j","\t\t\t\t\t\t\t\t\t!0, otherwise","  Objective:linctr","end-declarations","","!a_id::[\t1,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t0,\t0,\t0,\t1,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t    0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t1,\t1,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,","!\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t1,\t0,","!\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0 ]","","s_ij::[\t35, 100, 100, 35, 100, 100, 65, 100, 100, 100, 65, 100, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 35, 35, 100, 100, 100, 65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 35, 35, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 35, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 35, 100, 65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100,","\t\t65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 35, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 35, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 65, 65, 100, 100, 100, 100, 100, 35, 100, 65, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 65, 100, 100, 35, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 35, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,","\t\t100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100,","\t\t65, 100, 100, 100, 100, 100, 100, 100, 100, 100, 35, 100, 100, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 65, 100, 100, 100, 100, 100]","!","!","!p_d:: [62,\t71,\t106,\t138,\t131,\t90,\t128,\t78,\t114,\t122,\t131,\t63,\t89,\t133,\t64]","!","!b_ji_5::[\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t1,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t1,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,","!\t\t\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0 ]","!","!b_ji_10::[\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t1,","!\t\t\t0,\t1,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t1,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t1,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,\t1,","!\t\t\t1,\t1,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t1,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,","!\t\t\t1,\t1,\t0,\t0,\t0,\t0,\t1,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t0,","!\t\t\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t0,\t1,\t1,\t0 ]","","! Constraints are:","","!forall(d in districts)","!\t(sum(i in hospitals) X_i(i) * a_id(i,d)) + (sum(j in labs) X_j(j) * a_jd(j,d)) >=  Y_d(d)","!","!(sum(i in hospitals) X_i(i)) + (sum(j in labs) X_j(j)) = 4","!","!forall(i in hospitals)","!\tsum(j in labs)(b_ji_5(j,i)) >= X_i(i)","!","!forall(j in labs)","!\tsum(i in hospitals)(b_ji_10(j,i)) >= X_j(j)","!","!forall(i in hospitals, j in labs, d in districts) do","!\tX_i(i) is_binary","!\tX_j(j) is_binary","!\tY_d(d) is_binary","!","!end-do","","","! The objective function is:","!Obj:= sum(d in districts)p_d(d)*Y_d(d)","!","!maximize(Obj)","!","!writeln(\"Solution: \\nObjective: \", getobjval)","!forall( i in hospitals ) writeln(\" X_i(\", i, \"): \", getsol(X_i(i)))","!forall( j in labs ) writeln(\" X_j(\", j, \"): \", getsol(X_j(j)))","!forall( d in districts ) writeln(\" Y_d(\", d, \"): \", getsol(Y_d(d)))","","end-model",""]}]]},"ace":{"folds":[],"scrolltop":2711,"scrollleft":0,"selection":{"start":{"row":148,"column":1},"end":{"row":148,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":134,"state":"start","mode":"plugins/fico.ide.language.mosel/mode/mosel"}},"timestamp":1596122252488,"hash":"1d5e9af41d6ddcd750c1eccc7722173ad5e91b80"}