model ModelName
uses "mmxprs"; !gain access to the Xpress-Optimizer solver

!optional parameters section
declarations

! DECLARATION OF PARAMETERS

locations=1..30

d_ij:array(locations,locations) of real 	!distance between location i and j
s_ij:array(locations,locations) of real		!speed on the road between location i and j
a_ij:array(locations,locations) of real		!availability of the road between location i and j (due to storm)


! DECLARATIONS OF VARIABLES

X_ij:array(locations,locations) of mpvar		!1, if truck moves directly from location i to location j
									!0, otherwise
O_i: array(locations) of mpvar !visiting order
  Objective:linctr
travel_time: mpvar
end-declarations

initializations from "availability.txt"
   a_ij
end-initializations

initializations from "speed.txt"
   s_ij
end-initializations

initializations from "distances.txt"
   d_ij
end-initializations

! Constraints are:
forall(i in locations, j in locations)
	X_ij(i,j) <= a_ij(i,j)
	
forall(j in locations)
	(sum(i in locations) X_ij(i,j) ) = 1

forall(i in locations)
	(sum(j in locations) X_ij(i,j) ) = 1

forall(i in locations, j in locations)
	X_ij(i,j) is_binary

forall(i in locations) do
    O_i(i) <= getsize(locations)
    O_i(i) is_integer
end-do
    
forall(i in locations, j in locations | j <> 1)
    O_i(i) - O_i(j) + 1 <= (1 - X_ij(i, j)) * getsize(locations) ! M = getsize(locations) 

O_i(1) = 1

travel_time = sum(i in locations)(sum(j in locations) X_ij(i,j) * d_ij(i,j) / s_ij(i,j) )
! The objective function is:

Obj:= travel_time
minimize(travel_time)

 fopen("roads.txt", F_OUTPUT)
    forall( i in locations, j in locations)
        if(getsol(X_ij(i,j)) = 1) then
            writeln(i, ",", j)
        end-if
fclose(F_OUTPUT)
writeln("Selected roads are:")
forall( i in locations, j in locations)
    if(getsol(X_ij(i,j)) = 1) then
        writeln("from ", i, " to ", j)
    end-if
writeln("Objective Function Value: ", getobjval)
end-model
